pipeline {
    environment { 
        registryCredential = 'docker_nexus'
        GIT_REPO_NAME = GIT_URL.replaceFirst(/^.*\/([^\/]+?).git$/, '$1') 
        dockerImg = ""
        ecr_registry = "817969892253.dkr.ecr.us-west-2.amazonaws.com"
        ecr_cred = 'ecr:us-west-2:ecr_cred'
        ecr_eks = 'aws:us-west-2:ecr_eks'
        // eks_cred = 'eks-manager'
        eks_url = 'https://C2C0AC336FF98838305F8AE6CA78639A.gr7.us-west-2.eks.amazonaws.com'
        imageSedReplace = "${ecr_registry}/${GIT_REPO_NAME}:${GIT_COMMIT}"
        kubectlFile = "deployment.yaml"
        kubectlFile_staging = "deployment_staging.yaml"
        kubectlFile_prod = "deployment_prod.yaml"
        kube_cred = "k8s-dev"
        kube_cred_prod = "k8s-prod"

        PROD_BRANCH = "master"
        STAGING_BRANCH = "staging"
        user_env_input = "Development"

    }
    agent any
    tools{
     nodejs 'NODEJS'
    }
    stages {
        stage('Which environment to build?') {
            steps {
                script {
                    def userInput = input(id: 'userInput', message: 'Deploy to?',
                    parameters: [[$class: 'ChoiceParameterDefinition', defaultValue: 'Development', 
                        description:'Environment choices', name:'denv', choices: "Development\nProduction\nTesting"]
                    ])
                    user_env_input = userInput
                    //Use this value to branch to different logic if needed
                }
            }
        }
        stage('Confirm') {
            steps {
                input("Do you want to proceed building in ${user_env_input} environment?")
            }
        }       
        stage('Docker Build') {
            steps {
                echo 'Building..'
                
            }
        }
         stage('Confirm for unit tests') {
            steps {
                 
               script{
                   def is_unit_test_continue_parameter = input(id: 'is_unit_test_continue', message: 'Do you want to go for unit tests and jacoco reports?',
                    parameters: [[$class: 'ChoiceParameterDefinition', defaultValue: 'No',
                        description:'Unit Test choices', name:'unit tests  report', choices: 'Yes\nNo']
                    ])
                    
                   
                    is_unit_test_continue=is_unit_test_continue_parameter


                  

               }}}
        stage('Unit Tests') {
            when {
         expression { is_unit_test_continue == "Yes" }
        }
     steps {
         echo "Hello,unit_test continue...!"
            script {
                  echo "Current workspace is ${env.WORKSPACE}"
                  echo "Current workspace is $WORKSPACE"
                   echo "Current workspace is ../$WORKSPACE/config"
                   //sh 'cd $WORKSPACE/'
                sh 'npm i jest superset'
                sh 'export CONFIG_FILE_PATH=${CONFIG_FILE_PATH}'
                sh 'npx jest --forceExit'
                echo 'testing in progess...'
                
            }
        }
        }
        
        
        
    }
}
